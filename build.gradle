plugins {
    id 'io.spring.nohttp' version '0.0.5.RELEASE'
    id 'java-library'
    id 'io.spring.dependency-management'
    id 'org.sonarqube' version '3.1.1'
}

apply plugin: 'io.spring.dependency-management'

ext {
    canalVersion = '1.1.4'
    springVersion = '5.2.9.RELEASE'
    springDataVersion = '2.4.3'
    persistenceVersion = '2.2.3'
    hibernateVersion = '5.4.21.Final'
    junitJupiterVersion = '5.7.0'
    slf4jVersion = '1.7.12'
    log4jVersion = '1.2.17'
    mysqlVersion = '8.0.23'
}

group = 'com.springframework.canal'
version = canalVersion
description = 'Spring Canal Support'
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    javadoc {
        options {
            encoding 'utf-8'
            charSet 'utf-8'
            addBooleanOption 'Xdoclint:none', true
        }
    }
}
nohttp {
    source.include '**/src/**'
    source.exclude '**/*.gif', '**/*.ks'
}

repositories {
    mavenCentral()
}

// plugin 'io.spring.dependency-management' config
dependencyManagement {
    // disable cache
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
    applyMavenExclusions = false
    // config included in generated pom
    generatedPomCustomization {
        enabled = false
    }
    imports {
        mavenBom "org.springframework:spring-framework-bom:$springVersion"
    }
}

dependencies {
    // method 'api' enabled in 'java-library'
    api 'org.springframework:spring-context'
    api 'org.springframework:spring-tx'
    api 'org.springframework:spring-messaging'
    api("com.alibaba.otter:canal.client:$canalVersion") {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'ch.qos.logback', module: 'logback-core'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    api "jakarta.persistence:jakarta.persistence-api:$persistenceVersion"
    implementation "org.springframework.data:spring-data-commons:$springDataVersion"
    implementation "org.hibernate:hibernate-core:$hibernateVersion"
    testRuntimeOnly "mysql:mysql-connector-java:$mysqlVersion"
    testImplementation 'org.springframework:spring-test'
    testImplementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
    testImplementation "org.slf4j:slf4j-log4j12:$slf4jVersion"
    testImplementation "log4j:log4j:$log4jVersion"
}

test {
    logging.captureStandardOutput(LogLevel.INFO)
    useJUnitPlatform()
}

// apply from: 'publish.gradle'